@startuml P2S Context Qualification Process

!theme plain
skinparam backgroundColor #FFFFFF
skinparam sequenceMessageAlign center
skinparam maxMessageSize 200

participant "Meta Output Topic" as KafkaMeta
participant "Context Qualification Engine" as CCQWorker
participant "Rule Evaluation Service" as QualService
participant "Context Mapping Repository" as ContextRepo
participant "Redis Cache" as Cache
participant "Context Output Topic" as KafkaContext
participant "Error Topic" as ErrorTopic

== Context Qualification Process ==

KafkaMeta -> CCQWorker: Consume meta qualified message\n(Avro format)
activate CCQWorker

CCQWorker -> CCQWorker: Validate message structure\n& schema compliance

alt Message Valid
    CCQWorker -> QualService: Process transaction context
    activate QualService
    
    QualService -> Cache: Check for cached rules
    activate Cache
    
    alt Cache Hit
        Cache --> QualService: Return cached rules
        deactivate Cache
    else Cache Miss
        QualService -> ContextRepo: Fetch context rules & mappings
        activate ContextRepo
        
        ContextRepo --> QualService: Return rules & mapping data
        deactivate ContextRepo
        
        QualService -> Cache: Cache rules for future use
        activate Cache
        Cache --> QualService: Confirmation
        deactivate Cache
    end
    
    QualService -> QualService: Enrich transaction with derived data:\n• BIN information\n• Issuer/Acquirer country analysis\n• Payment type classification\n• MCC, Terminal type\n• Card product determination\n• Regulatory zone classification\n• Authentication flow analysis
    
    QualService -> QualService: Apply context determination:\n• Scheme determination (BIN, AID)\n• Cobranded card logic\n• Payment channel classification\n• Merchant & program profiles
    
    QualService -> QualService: Generate normalized\n"qualified transaction context"
    
    QualService --> CCQWorker: Return enriched & qualified transaction
    deactivate QualService
    
    CCQWorker -> KafkaContext: Publish enriched message\nto context-related topics
    
    note right of KafkaContext
        Message ready for downstream
        consumption by:
        • ICC (Interchange Calculation)
        • SFC (Scheme Fees Calculation)
    end note
    
else Message Invalid
    CCQWorker -> CCQWorker: Log validation error
    CCQWorker -> ErrorTopic: Send to dead letter queue
    
    note right of ErrorTopic
        Invalid messages routed to
        error topic for analysis
        and potential reprocessing
    end note
end

deactivate CCQWorker

== Example Context Enrichment ==
note over QualService
    **Example Enrichment Logic:**
    Input: Issuer Country = "FR", Acquirer Country = "FR"
    Derived: Transaction Type = "DOMESTIC"
    
    Input: BIN = "4xxxxx", AID = "A0000000031010"
    Derived: Scheme = "VISA", Card Product = "CONSUMER"
    
    Input: MCC = "5411", Terminal = "POS"
    Derived: Merchant Segment = "GROCERY", Channel = "CARD_PRESENT"
end note

@enduml